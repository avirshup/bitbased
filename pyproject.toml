[project]
name = "bitbased"
dynamic = ['version']
requires-python = ">=3.12"
description = "Bitmath for fun and profit"
readme = "README.md"
dependencies = [
    'attrs>=23.0.0',
]


[build-system]
build-backend = "setuptools.build_meta"
requires = [
    "setuptools>=67.3.2",
    "versioningit~=2.2.0",
]

[tool.setuptools]
packages = ['bitbased']

[tool.versioningit.vcs]
method = "git"

[tool.versioningit.onbuild]
source-file = "bitbased/_version.py"
build-file = "bitbased/_version.py"
require-match = false

[tool.versioningit.next-version]
method = "smallest"

[tool.versioningit.format]
distance = "{next_version}.dev{distance}+{vcs}{rev}"
dirty = "{base_version}+d{build_date:%Y%m%d}"
distance-dirty = "{next_version}.dev{distance}+{vcs}{rev}.d{build_date:%Y%m%d}"



# ───── Pyright ──────────────────────────────────────────────────
[tool.pyright]
# see https://github.com/microsoft/pyright/blob/main/docs/configuration.md
include = ['bitbased']
typeCheckingMode = "standard"


# ───── Ruff ─────────────────────────────────────────────────────
[tool.ruff]
# see https://docs.astral.sh/ruff/settings/
required-version = '>=0.8'
line-length = 82
exclude = ['_build',  'build', 'dist', 'artifacts']
fix = true

[tool.ruff.lint]
extend-unsafe-fixes=[
    "F401",  # don't auto-remove "unused imports" - this deletes in-progress code
    "RUF100",   # don't auto-remove "uneccesary noqa";
                    # the #noqa might be for another tool (pyright, pycharm, etc.)
]

ignore = [
    # "SIM108", # Might be too eager to replace if-else with ternary expressions
]

# see https://docs.astral.sh/ruff/rules for definitions
select = [
    "E", # pycodestyle
    "F", # Pyflakes
    "UP", # pyupgrade
    "B", # flake8-bugbear
    "SIM", # flake8-simplify
    "I", # isort
    "YTT", # flake8-2020
    "RUF", # ruff's own rules
]

[tool.ruff.lint.per-file-ignores]
"__init__.py" = ["I001", "F403"]  # allow 'import *' in __init__.py

[tool.ruff.lint.pydocstyle]
convention = "google"
